name: Frontend CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'ecommerce-app-frontend/**'
      - '.github/workflows/frontend-cicd.yml'
  workflow_dispatch: {}

env:
  IMAGE_NAME: frontend
  NAMESPACE: shop-maram
  DEPLOYMENT_NAME: frontend-deployment

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node (for potential build tooling cache)
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Set IMAGE_TAG
        id: vars
        run: |
          SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)
          echo "IMAGE_TAG=$SHORT_SHA" >> $GITHUB_ENV

      - name: Azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: ACR login
        uses: azure/docker-login@v2
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build \
            -t ${{ secrets.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
            -f ecommerce-app-frontend/Dockerfile \
            ecommerce-app-frontend

      - name: Push Docker image
        run: |
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Set AKS context
        uses: azure/aks-set-context@v4
        with:
          resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}
          cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}

      - name: Update Kubernetes deployment image
        run: |
          kubectl -n ${{ env.NAMESPACE }} set image deployment/${{ env.DEPLOYMENT_NAME }} \
            frontend=${{ secrets.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Wait for rollout
        run: |
          kubectl -n ${{ env.NAMESPACE }} rollout status deployment/${{ env.DEPLOYMENT_NAME }}


